// Import createSlice and createAsyncThunk from Redux Toolkit
import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';

// Create an async thunk for fetching todos from an API
export const fetchTodos = createAsyncThunk(
  'todos/fetchTodos', // action type prefix
  async () => {
    // TODO - Perform the API call to fetch todos
    const response = await fetch("https://jsonplaceholder.typicode.com/todos");
    const data = await response.json();
    return data;
  }
);

// Define the initial state for the todos slice
const initialState = {
  todos: [],        
  status: 'idle',   
  error: null,    
};

// Create a slice for todos with extraReducers to handle async thunk actions
const todoSlice = createSlice({
  name: 'todos',   
  initialState,     
  reducers: {
    // Synchronous reducers (if any) can be added here
  },
  // extraReducers handles actions generated by createAsyncThunk
  extraReducers: (builder) => {
    // TODO - When fetchTodos is pending, set status to 'loading'
    builder.addCase(fetchTodos.pending, (state) => {
      state.status = "loading";
    })
    
    // TODO - When fetchTodos is fulfilled, update state with fetched todos
    builder.addCase(fetchTodos.fulfilled, (state, action) => {
      state.status = "succeeded";
      state.todos = action.payload;
    })
    
    // TODO - When fetchTodos is rejected, set status to 'failed' and store the error message
    builder.addCase(fetchTodos.rejected, (state, action) => {
      state.status = "failed";
      state.error = action.error.message;
    })
  },
});

// Export the reducer to include in the store
export default todoSlice.reducer;
